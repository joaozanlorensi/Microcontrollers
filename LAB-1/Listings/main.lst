


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         ; Este programa deve esperar o usuário pressionar uma ch
                       ave.
    7 00000000         ; Caso o usuário pressione uma chave, um LED deve piscar
                        a cada 1 segundo.
    8 00000000         
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         
   13 00000000         ; Declarações EQU - Defines
   14 00000000         ;<NOME>         EQU <VALOR>
   15 00000000         ; ========================
   16 00000000         ; Definições de Valores
   17 00000000         
   18 00000000         
   19 00000000         ; ------------------------------------------------------
                       -------------------------
   20 00000000         ; Área de Dados - Declarações de variáveis
   21 00000000                 AREA             DATA, ALIGN=2
   22 00000000         ; Se alguma variável for chamada em outro arquivo
   23 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   24 00000000         ; partir de outro arquivo
   25 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   26 00000000         ; de <tam> bytes a partir da primeira 
   27 00000000         ; posição da RAM  
   28 00000000         
   29 00000000         ; ------------------------------------------------------
                       -------------------------
   30 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   31 00000000         ;                  código
   32 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   33 00000000         
   34 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   35 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   36 00000000         ; outro arquivo. No caso startup.s
   37 00000000         
   38 00000000         ; Se chamar alguma função externa 
   39 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   40 00000000         ; função <func>
   41 00000000                 IMPORT           PLL_Init
   42 00000000                 IMPORT           SysTick_Init
   43 00000000                 IMPORT           SysTick_Wait1ms
   44 00000000                 IMPORT           GPIO_Init



ARM Macro Assembler    Page 2 


   45 00000000                 IMPORT           PortN_Output
   46 00000000                 IMPORT           PortJ_Input
   47 00000000         
   48 00000000         
   49 00000000         ; ------------------------------------------------------
                       -------------------------
   50 00000000         ; Função main()
   51 00000000         Start
   52 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   53 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
   54 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   55 0000000C         
   56 0000000C         MainLoop
   57 0000000C         ; ****************************************
   58 0000000C         ; Escrever código que lê o estado da chave, se ela estiv
                       er desativada apaga o LED
   59 0000000C         ; Se estivar ativada chama a subrotina Pisca_LED
   60 0000000C         ; ****************************************
   61 0000000C F7FF FFFE       BL               PortJ_Input
   62 00000010         Verifica_Nenhuma
   63 00000010 2803            CMP              R0, #2_00000011
   64 00000012 D100            BNE              Verifica_SW1
   65 00000014 E7FA            B                MainLoop
   66 00000016         Verifica_SW1
   67 00000016 2802            CMP              R0, #2_00000010
   68 00000018 D102            BNE              Verifica_SW2
   69 0000001A F000 F80B       BL               Pisca_LED
   70 0000001E E7F5            B                MainLoop
   71 00000020         Verifica_SW2
   72 00000020 2801            CMP              R0, #2_00000001
   73 00000022 D102            BNE              Verifica_Ambas
   74 00000024 F000 F806       BL               Pisca_LED
   75 00000028 E7F0            B                MainLoop
   76 0000002A         Verifica_Ambas
   77 0000002A 2800            CMP              R0, #2_00000000
   78 0000002C D1EE            BNE              MainLoop
   79 0000002E F000 F801       BL               Pisca_LED
   80 00000032 E7EB            B                MainLoop
   81 00000034         
   82 00000034         ;-------------------------------------------------------
                       -------------------------
   83 00000034         ; Função Pisca_LED
   84 00000034         ; Parâmetro de entrada: Não tem
   85 00000034         ; Parâmetro de saída: Não tem
   86 00000034         Pisca_LED
   87 00000034         ; ****************************************
   88 00000034         ; Escrever função que acende o LED, espera 1 segundo, ap
                       aga o LED e espera 1 s
   89 00000034         ; Esta função deve chamar a rotina SysTick_Wait1ms com o
                        parâmetro de entrada em R0
   90 00000034         ; ****************************************
   91 00000034 F04F 0002       MOV              R0, #2_00000010



ARM Macro Assembler    Page 3 


   92 00000038 F7FF FFFE       BL               PortN_Output
   93 0000003C F44F 707A       MOV              R0, #1000
   94 00000040 F7FF FFFE       BL               SysTick_Wait1ms
   95 00000044 F04F 0000       MOV              R0, #2_00000000
   96 00000048 F7FF FFFE       BL               PortN_Output
   97 0000004C 4770            BX               LR
   98 0000004E         
   99 0000004E         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  100 0000004E         ; Fim do Arquivo
  101 0000004E         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  102 0000004E 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  103 00000050                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\User
s\joaoz\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -IC:
\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_V
ERSION SETA 528" --predefine="TM4C1294NCPDT SETA 1" --list=.\listings\main.lst 
main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: .text unused
MainLoop 0000000C

Symbol: MainLoop
   Definitions
      At line 56 in file main.s
   Uses
      At line 65 in file main.s
      At line 70 in file main.s
      At line 75 in file main.s
      At line 78 in file main.s
      At line 80 in file main.s

Pisca_LED 00000034

Symbol: Pisca_LED
   Definitions
      At line 86 in file main.s
   Uses
      At line 69 in file main.s
      At line 74 in file main.s
      At line 79 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 51 in file main.s
   Uses
      At line 35 in file main.s
Comment: Start used once
Verifica_Ambas 0000002A

Symbol: Verifica_Ambas
   Definitions
      At line 76 in file main.s
   Uses
      At line 73 in file main.s
Comment: Verifica_Ambas used once
Verifica_Nenhuma 00000010

Symbol: Verifica_Nenhuma
   Definitions
      At line 62 in file main.s
   Uses
      None
Comment: Verifica_Nenhuma unused
Verifica_SW1 00000016

Symbol: Verifica_SW1
   Definitions
      At line 66 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 64 in file main.s
Comment: Verifica_SW1 used once
Verifica_SW2 00000020

Symbol: Verifica_SW2
   Definitions
      At line 71 in file main.s
   Uses
      At line 68 in file main.s
Comment: Verifica_SW2 used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 44 in file main.s
   Uses
      At line 54 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 41 in file main.s
   Uses
      At line 52 in file main.s
Comment: PLL_Init used once
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 46 in file main.s
   Uses
      At line 61 in file main.s
Comment: PortJ_Input used once
PortN_Output 00000000

Symbol: PortN_Output
   Definitions
      At line 45 in file main.s
   Uses
      At line 92 in file main.s
      At line 96 in file main.s

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 42 in file main.s
   Uses
      At line 53 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 43 in file main.s
   Uses
      At line 94 in file main.s
Comment: SysTick_Wait1ms used once
6 symbols
349 symbols in table
