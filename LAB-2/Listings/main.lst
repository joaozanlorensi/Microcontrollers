


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Rev1: 10/03/2018
    5 00000000         ; Rev2: 10/04/2019
    6 00000000         ; Este programa espera o usuário apertar a chave USR_SW
                       1 e/ou a chave USR_SW2.
    7 00000000         ; Caso o usuário pressione a chave USR_SW1, acenderá o
                        LED3 (PF4). Caso o usuário pressione 
    8 00000000         ; a chave USR_SW2, acenderá o LED4 (PF0). Caso as duas 
                       chaves sejam pressionadas, os dois 
    9 00000000         ; LEDs acendem.
   10 00000000         
   11 00000000         
   12 00000000         
   13 00000000         ; ------------------------------------------------------
                       -------------------------
   14 00000000                 THUMB                        ; Instruções do t
                                                            ipo Thumb-2
   15 00000000         ; ------------------------------------------------------
                       -------------------------
   16 00000000         ; Declarações EQU - Defines
   17 00000000         ;<NOME>         EQU <VALOR>
   18 00000000         ; ========================
   19 00000000         
   20 00000000         
   21 00000000         ; ------------------------------------------------------
                       -------------------------
   22 00000000         ; Área de Dados - Declarações de variáveis
   23 00000000                 AREA             DATA, ALIGN=2
   24 00000000         ; Se alguma variável for chamada em outro arquivo
   25 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   26 00000000         ; partir de outro arquivo
   27 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   28 00000000         ; de <tam> bytes a partir da primeira 
   29 00000000         ; posição da RAM  
   30 00000000         
   31 00000000         ; ------------------------------------------------------
                       -------------------------
   32 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir se
                       rá armazenado na memória de 
   33 00000000         ;                  código
   34 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   35 00000000         
   36 00000000         ; Se alguma função do arquivo for chamada em outro arq
                       uivo 
   37 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a pa
                                                            rtir de 
   38 00000000         ; outro arquivo. No caso startup.s
   39 00000000         
   40 00000000         ; Se chamar alguma função externa 
   41 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   42 00000000         ; função <func>
   43 00000000                 IMPORT           GPIO_Init



ARM Macro Assembler    Page 2 


   44 00000000                 IMPORT           PLL_Init
   45 00000000                 IMPORT           SysTick_Init
   46 00000000                 IMPORT           LCD_Init
   47 00000000                 IMPORT           LCD_ImprimeString
   48 00000000                 IMPORT           LCD_SetaCursor
   49 00000000         
   50 00000000 4F 69 20 
              46 72 61 
              6E 20 5E 
              5F 5E 00 MSG1_STR
                               DCB              "Oi Fran ^_^",0
   51 0000000C 00      MSG2_STR
                               DCB              "",0
   52 0000000D         
   53 0000000D         ; ------------------------------------------------------
                       -------------------------
   54 0000000D         ; Função main()
   55 0000000D         Start
   56 0000000D 00 F7FF 
              FFFE             BL               PLL_Init    ;80MHz
   57 00000012 F7FF FFFE       BL               SysTick_Init ;Inicia SysTick
   58 00000016 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIOs
   59 0000001A F7FF FFFE       BL               LCD_Init
   60 0000001E 4806            LDR              R0, =MSG1_STR
   61 00000020 F7FF FFFE       BL               LCD_ImprimeString
   62 00000024 F04F 0001       MOV              R0, #1
   63 00000028 F04F 0100       MOV              R1, #0
   64 0000002C F7FF FFFE       BL               LCD_SetaCursor
   65 00000030 4802            LDR              R0, =MSG2_STR
   66 00000032 F7FF FFFE       BL               LCD_ImprimeString
   67 00000036         
   68 00000036 00 00           ALIGN
   69 00000038                 END
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\User
s\Shigueo\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -I
C:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION
_VERSION SETA 528" --predefine="TM4C1294NCPDT SETA 1" --list=.\listings\main.ls
t main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 23 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 34 in file main.s
   Uses
      None
Comment: .text unused
MSG1_STR 00000000

Symbol: MSG1_STR
   Definitions
      At line 50 in file main.s
   Uses
      At line 60 in file main.s
Comment: MSG1_STR used once
MSG2_STR 0000000C

Symbol: MSG2_STR
   Definitions
      At line 51 in file main.s
   Uses
      At line 65 in file main.s
Comment: MSG2_STR used once
Start 0000000D

Symbol: Start
   Definitions
      At line 55 in file main.s
   Uses
      At line 37 in file main.s
Comment: Start used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 43 in file main.s
   Uses
      At line 58 in file main.s
Comment: GPIO_Init used once
LCD_ImprimeString 00000000

Symbol: LCD_ImprimeString
   Definitions
      At line 47 in file main.s
   Uses
      At line 61 in file main.s
      At line 66 in file main.s

LCD_Init 00000000

Symbol: LCD_Init
   Definitions
      At line 46 in file main.s
   Uses
      At line 59 in file main.s
Comment: LCD_Init used once
LCD_SetaCursor 00000000

Symbol: LCD_SetaCursor
   Definitions
      At line 48 in file main.s
   Uses
      At line 64 in file main.s
Comment: LCD_SetaCursor used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 44 in file main.s
   Uses
      At line 56 in file main.s
Comment: PLL_Init used once
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 45 in file main.s
   Uses
      At line 57 in file main.s
Comment: SysTick_Init used once
6 symbols
347 symbols in table
