


ARM Macro Assembler    Page 1 


    1 00000000         ; gpio.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 19/03/2018
    5 00000000         
    6 00000000         ; ------------------------------------------------------
                       -------------------------
    7 00000000                 THUMB                        ; Instruções do t
                                                            ipo Thumb-2
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000         ; Declarações EQU - Defines
   10 00000000         ; ========================
   11 00000000         ; Definições de Valores
   12 00000000 00000001 
                       BIT0    EQU              2_0001
   13 00000000 00000002 
                       BIT1    EQU              2_0010
   14 00000000         ; ========================
   15 00000000         ; Definições dos Registradores Gerais
   16 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   17 00000000 400FEA08 
                       SYSCTL_PRGPIO_R
                               EQU              0x400FEA08
   18 00000000         ; ========================
   19 00000000         ; Definições dos Ports
   20 00000000         
   21 00000000         ; PORT J
   22 00000000 40060520 
                       GPIO_PORTJ_AHB_LOCK_R
                               EQU              0x40060520
   23 00000000 40060524 
                       GPIO_PORTJ_AHB_CR_R
                               EQU              0x40060524
   24 00000000 40060528 
                       GPIO_PORTJ_AHB_AMSEL_R
                               EQU              0x40060528
   25 00000000 4006052C 
                       GPIO_PORTJ_AHB_PCTL_R
                               EQU              0x4006052C
   26 00000000 40060400 
                       GPIO_PORTJ_AHB_DIR_R
                               EQU              0x40060400
   27 00000000 40060420 
                       GPIO_PORTJ_AHB_AFSEL_R
                               EQU              0x40060420
   28 00000000 4006051C 
                       GPIO_PORTJ_AHB_DEN_R
                               EQU              0x4006051C
   29 00000000 40060510 
                       GPIO_PORTJ_AHB_PUR_R
                               EQU              0x40060510
   30 00000000 400603FC 
                       GPIO_PORTJ_AHB_DATA_R
                               EQU              0x400603FC
   31 00000000 00000100 
                       GPIO_PORTJ



ARM Macro Assembler    Page 2 


                               EQU              2_000000100000000
   32 00000000         
   33 00000000         ;PORT M
   34 00000000 400633FC 
                       GPIO_PORTM_DATA_R
                               EQU              0x400633FC
   35 00000000 40063400 
                       GPIO_PORTM_DIR_R
                               EQU              0x40063400
   36 00000000 40063420 
                       GPIO_PORTM_AFSEL_R
                               EQU              0x40063420
   37 00000000 40063510 
                       GPIO_PORTM_PUR_R
                               EQU              0x40063510
   38 00000000 4006351C 
                       GPIO_PORTM_DEN_R
                               EQU              0x4006351C
   39 00000000 40063520 
                       GPIO_PORTM_LOCK_R
                               EQU              0x40063520
   40 00000000 40063524 
                       GPIO_PORTM_CR_R
                               EQU              0x40063524
   41 00000000 40063528 
                       GPIO_PORTM_AMSEL_R
                               EQU              0x40063528
   42 00000000 4006352C 
                       GPIO_PORTM_PCTL_R
                               EQU              0x4006352C
   43 00000000 00000800 
                       GPIO_PORTM
                               EQU              2_000100000000000
   44 00000000         
   45 00000000         ;PORT K
   46 00000000 400613FC 
                       GPIO_PORTK_DATA_R
                               EQU              0x400613FC
   47 00000000 40061400 
                       GPIO_PORTK_DIR_R
                               EQU              0x40061400
   48 00000000 40061420 
                       GPIO_PORTK_AFSEL_R
                               EQU              0x40061420
   49 00000000 40061510 
                       GPIO_PORTK_PUR_R
                               EQU              0x40061510
   50 00000000 4006151C 
                       GPIO_PORTK_DEN_R
                               EQU              0x4006151C
   51 00000000 40061520 
                       GPIO_PORTK_LOCK_R
                               EQU              0x40061520
   52 00000000 40061524 
                       GPIO_PORTK_CR_R
                               EQU              0x40061524
   53 00000000 40061528 
                       GPIO_PORTK_AMSEL_R
                               EQU              0x40061528



ARM Macro Assembler    Page 3 


   54 00000000 4006152C 
                       GPIO_PORTK_PCTL_R
                               EQU              0x4006152C
   55 00000000 00000200 
                       GPIO_PORTK
                               EQU              2_000001000000000
   56 00000000         
   57 00000000         ; Valores para o LCD
   58 00000000 400613FC 
                       LCD_BUS EQU              GPIO_PORTK_DATA_R
   59 00000000 400633FC 
                       LCD_CONTROL
                               EQU              GPIO_PORTM_DATA_R
   60 00000000 00000038 
                       FUNCTION_SET
                               EQU              0x38        ; 0x30 para 1 linha
                                                             | 0x38 para 2 linh
                                                            as
   61 00000000 00000006 
                       ENTRY_MODE
                               EQU              0x06        ; 0x06 para increme
                                                            ntar endereço | 0x
                                                            04 para decrementar
                                                             endereço
   62 00000000 00000080 
                       LINHA_0 EQU              0x80
   63 00000000 000000C0 
                       LINHA_1 EQU              0xC0
   64 00000000 00000001 
                       CLEAR   EQU              0x01
   65 00000000 00000002 
                       RET_HOME
                               EQU              0x02
   66 00000000 00000010 
                       SCURSOR_LEFT
                               EQU              0x10
   67 00000000 00000014 
                       SCURSOR_RIGHT
                               EQU              0x14
   68 00000000 00000018 
                       SDISPLAY_LEFT
                               EQU              0x18
   69 00000000 0000001C 
                       SDISPLAY_RIGHT
                               EQU              0x1C
   70 00000000 0000000C 
                       DISPLAY_MODE
                               EQU              0x0C        ; 0x0F para Cursor 
                                                            e Blink ligados | 0
                                                            x0C para ambos desl
                                                            igados | 0x0D para 
                                                            Cursor desligado e 
                                                            Blink ligado | 0x0E
                                                             para Cursor ligado
                                                             e Blink Desligado
   71 00000000 00000003 
                       DISPLAY_OFF
                               EQU              0x03
   72 00000000         



ARM Macro Assembler    Page 4 


   73 00000000         ; ------------------------------------------------------
                       -------------------------
   74 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir se
                       rá armazenado na memória de 
   75 00000000         ;                  código
   76 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   77 00000000         
   78 00000000                 EXPORT           GPIO_Init
   79 00000000                 EXPORT           LCD_Init
   80 00000000                 EXPORT           LCD_ImprimeString
   81 00000000                 EXPORT           LCD_SetaCursor
   82 00000000         
   83 00000000                 IMPORT           SysTick_Wait1ms
   84 00000000         
   85 00000000         ;-------------------------------------------------------
                       -------------------------
   86 00000000         ; Função GPIO_Init
   87 00000000         ; Parâmetro de entrada: Não tem
   88 00000000         ; Parâmetro de saída: Não tem
   89 00000000         GPIO_Init
   90 00000000         ;=====================
   91 00000000         ; 1. Ativar o clock para a porta setando o bit correspon
                       dente no registrador RCGCGPIO,
   92 00000000         ; após isso verificar no PRGPIO se a porta está pronta
                        para uso.
   93 00000000         ; enable clock to GPIOF at clock gating register
   94 00000000 4853            LDR              R0, =SYSCTL_RCGCGPIO_R ;Carrega
                                                             o endereço do reg
                                                            istrador RCGCGPIO
   95 00000002 F44F 7180       MOV              R1, #GPIO_PORTJ ;Seta o bit da 
                                                            porta A
   96 00000006 F441 6100       ORR              R1, #GPIO_PORTM
   97 0000000A F441 7100       ORR              R1, #GPIO_PORTK
   98 0000000E 6001            STR              R1, [R0]    ;Move para a memór
                                                            ia os bits das port
                                                            as no endereço do 
                                                            RCGCGPIO
   99 00000010 4850            LDR              R0, =SYSCTL_PRGPIO_R ;Carrega o
                                                             endereço do PRGPI
                                                            O para esperar os G
                                                            PIO ficarem prontos
                                                            
  100 00000012         EsperaGPIO
  101 00000012 6801            LDR              R1, [R0]    ;Lê da memória o 
                                                            conteúdo do endere
                                                            ço do registrador
  102 00000014 F44F 7280       MOV              R2, #GPIO_PORTJ ;Seta os bits c
                                                            orrespondentes às 
                                                            portas para fazer a
                                                             comparação
  103 00000018 F442 6200       ORR              R2, #GPIO_PORTM
  104 0000001C F442 7200       ORR              R2, #GPIO_PORTK
  105 00000020 4211            TST              R1, R2      ;ANDS de R1 com R2
  106 00000022 D0F6            BEQ              EsperaGPIO  ;Se o flag Z=1, vol
                                                            ta para o laço. Se
                                                            não continua execu
                                                            tando
  107 00000024         



ARM Macro Assembler    Page 5 


  108 00000024         ; 2. Limpar o AMSEL para desabilitar a analógica
  109 00000024 F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador para desabil
                                                            itar a função ana
                                                            lógica
  110 00000028 484B            LDR              R0, =GPIO_PORTJ_AHB_AMSEL_R ;Ca
                                                            rrega o R0 com o en
                                                            dere?o do AMSEL par
                                                            a a porta J
  111 0000002A 6001            STR              R1, [R0]
  112 0000002C 484B            LDR              R0, =GPIO_PORTM_AMSEL_R ;Carreg
                                                            a o R0 com o endere
                                                            ço do AMSEL para a
                                                             porta P
  113 0000002E 6001            STR              R1, [R0]
  114 00000030 484B            LDR              R0, =GPIO_PORTK_AMSEL_R ;Carreg
                                                            a o R0 com o endere
                                                            ço do AMSEL para a
                                                             porta P
  115 00000032 6001            STR              R1, [R0]
  116 00000034         
  117 00000034         ; 3. Limpar PCTL para selecionar o GPIO
  118 00000034 F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador para selecio
                                                            nar o modo GPIO
  119 00000038 484A            LDR              R0, =GPIO_PORTJ_AHB_PCTL_R ;Car
                                                            rega o R0 com o end
                                                            ere?o do PCTL para 
                                                            a porta J
  120 0000003A 6001            STR              R1, [R0]
  121 0000003C 484A            LDR              R0, =GPIO_PORTM_PCTL_R ;Carrega
                                                             o R0 com o endere?
                                                            o do PCTL para a po
                                                            rta J
  122 0000003E 6001            STR              R1, [R0]
  123 00000040 484A            LDR              R0, =GPIO_PORTK_PCTL_R ;Carrega
                                                             o R0 com o endere?
                                                            o do PCTL para a po
                                                            rta J
  124 00000042 6001            STR              R1, [R0]
  125 00000044         ; 4. DIR para 0 se for entrada, 1 se for saída
  126 00000044 484A            LDR              R0, =GPIO_PORTJ_AHB_DIR_R ;Carr
                                                            ega o R0 com o ende
                                                            re?o do DIR para a 
                                                            porta J
  127 00000046 F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador DIR para fun
                                                            cionar com entrada
  128 0000004A 6001            STR              R1, [R0]
  129 0000004C         
  130 0000004C 4849            LDR              R0, =GPIO_PORTM_DIR_R ;Carrega 
                                                            o R0 com o endere?o
                                                             do DIR para a port
                                                            a J
  131 0000004E F04F 01FF       MOV              R1, #0xFF   ;Colocar 0 no regis
                                                            trador DIR para fun
                                                            cionar com entrada
  132 00000052 6001            STR              R1, [R0]
  133 00000054         



ARM Macro Assembler    Page 6 


  134 00000054 4848            LDR              R0, =GPIO_PORTK_DIR_R ;Carrega 
                                                            o R0 com o endere?o
                                                             do DIR para a port
                                                            a J
  135 00000056 F04F 01FF       MOV              R1, #0xFF   ;Colocar 0 no regis
                                                            trador DIR para fun
                                                            cionar com entrada
  136 0000005A 6001            STR              R1, [R0]
  137 0000005C         
  138 0000005C         ; 5. Limpar os bits AFSEL para 0 para selecionar GPIO 
  139 0000005C         ;    Sem função alternativa
  140 0000005C F04F 0100       MOV              R1, #0
  141 00000060 4846            LDR              R0, =GPIO_PORTJ_AHB_AFSEL_R ;Ca
                                                            rrega o endere?o do
                                                             AFSEL da porta J
  142 00000062 6001            STR              R1, [R0]
  143 00000064 4846            LDR              R0, =GPIO_PORTM_AFSEL_R ;Carreg
                                                            a o endere?o do AFS
                                                            EL da porta J
  144 00000066 6001            STR              R1, [R0]
  145 00000068 4846            LDR              R0, =GPIO_PORTK_AFSEL_R ;Carreg
                                                            a o endere?o do AFS
                                                            EL da porta J
  146 0000006A 6001            STR              R1, [R0]
  147 0000006C         
  148 0000006C         ; 6. Setar os bits de DEN para habilitar I/O digital
  149 0000006C 4846            LDR              R0, =GPIO_PORTJ_AHB_DEN_R ;Carr
                                                            ega o endere?o do D
                                                            EN
  150 0000006E 6801            LDR              R1, [R0]    ;Ler da mem?ria o r
                                                            egistrador GPIO_POR
                                                            TJ_AHB_DEN_R
  151 00000070 F04F 0203       MOV              R2, #2_00000011 ;Habilitar func
                                                            ionalidade digital 
                                                            na DEN
  152 00000074 EA41 0102       ORR              R1, R2      ;Setar bits sem sob
                                                            rescrever os demais
                                                            
  153 00000078 6001            STR              R1, [R0]
  154 0000007A         
  155 0000007A 4844            LDR              R0, =GPIO_PORTM_DEN_R ;Carrega 
                                                            o endere?o do DEN
  156 0000007C 6801            LDR              R1, [R0]    ;Ler da mem?ria o r
                                                            egistrador GPIO_POR
                                                            TJ_AHB_DEN_R
  157 0000007E F04F 0207       MOV              R2, #2_00000111 ;Habilitar func
                                                            ionalidade digital 
                                                            na DEN
  158 00000082 EA41 0102       ORR              R1, R2      ;Setar bits sem sob
                                                            rescrever os demais
                                                            
  159 00000086 6001            STR              R1, [R0]
  160 00000088         
  161 00000088 4841            LDR              R0, =GPIO_PORTK_DEN_R ;Carrega 
                                                            o endere?o do DEN
  162 0000008A 6801            LDR              R1, [R0]    ;Ler da mem?ria o r
                                                            egistrador GPIO_POR
                                                            TJ_AHB_DEN_R
  163 0000008C F04F 02FF       MOV              R2, #2_11111111 ;Habilitar func



ARM Macro Assembler    Page 7 


                                                            ionalidade digital 
                                                            na DEN
  164 00000090 EA41 0102       ORR              R1, R2      ;Setar bits sem sob
                                                            rescrever os demais
                                                            
  165 00000094 6001            STR              R1, [R0]
  166 00000096         
  167 00000096         ; 7. Para habilitar resistor de pull-up interno, setar P
                       UR para 1
  168 00000096 483F            LDR              R0, =GPIO_PORTJ_AHB_PUR_R ;Carr
                                                            ega o endere?o do P
                                                            UR para a porta J
  169 00000098 F04F 0101       MOV              R1, #BIT0   ;Habilitar funciona
                                                            lidade digital de r
                                                            esistor de pull-up 
                                                            
  170 0000009C F041 0102       ORR              R1, #BIT1   ;nos bits 0 e 1
  171 000000A0 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da mem?ria do 
                                                            resistor de pull-up
                                                            
  172 000000A2         
  173 000000A2 4770            BX               LR          ;
  174 000000A4         
  175 000000A4         ; LCD_Init
  176 000000A4         ; Entrada: Nenhuma
  177 000000A4         ; Saída: Nenhuma
  178 000000A4         LCD_Init
  179 000000A4 B500            PUSH{LR}
  180 000000A6         ; Duas linhas
  181 000000A6 F04F 0038       LDR              R0, =FUNCTION_SET
  182 000000AA F000 F82B       BL               ComandoLCD
  183 000000AE         ; Incremento para direita
  184 000000AE F04F 0006       LDR              R0, =ENTRY_MODE
  185 000000B2 F000 F827       BL               ComandoLCD
  186 000000B6         ; Cursor piscando
  187 000000B6 F04F 000C       LDR              R0, =DISPLAY_MODE
  188 000000BA F000 F823       BL               ComandoLCD
  189 000000BE         ; Clear
  190 000000BE F04F 0001       LDR              R0, =CLEAR
  191 000000C2 F000 F81F       BL               ComandoLCD
  192 000000C6 F85D EB04       POP              {LR}
  193 000000CA         ; Retorna
  194 000000CA 4770            BX               LR
  195 000000CC         
  196 000000CC         ; LCD_ImprimeString
  197 000000CC         ; Entrada: R0 - Endereço da string a ser escrita
  198 000000CC         ; Saída: Nenhuma
  199 000000CC         LCD_ImprimeString
  200 000000CC B402            PUSH             {R1}
  201 000000CE         ; Carrega caracter
  202 000000CE F810 1B01       LDRB             R1, [R0], #1
  203 000000D2         ; Verifica por fim da string
  204 000000D2 2900            CMP              R1, #0
  205 000000D4 D006            BEQ              Fim
  206 000000D6         ; Envia dado
  207 000000D6 B501            PUSH             {R0,LR}
  208 000000D8 4608            MOV              R0, R1
  209 000000DA F000 F826       BL               DadoLCD



ARM Macro Assembler    Page 8 


  210 000000DE E8BD 4001       POP              {R0,LR}
  211 000000E2 E7FE            B                LCD_ImprimeString
  212 000000E4         Fim
  213 000000E4 BC02            POP{R1}
  214 000000E6         ;Retorna
  215 000000E6 4770            BX               LR
  216 000000E8         
  217 000000E8         ; LCD_SetaCursor
  218 000000E8         ; Entrada: R0 - Linha, R1 - Coluna
  219 000000E8         ; Saída: Nenhuma
  220 000000E8         ; Obs: Tanto a linha quando a coluna são indexadas a pa
                       rtir 0
  221 000000E8         LCD_SetaCursor
  222 000000E8 B503            PUSH             {R0,R1,LR}
  223 000000EA         ; Verifica linha a ser escrita
  224 000000EA 2800            CMP              R0, #0
  225 000000EC D102            BNE              Linha1
  226 000000EE         ; Carrega comando para linha 0
  227 000000EE F04F 0080       LDR              R0, =LINHA_0
  228 000000F2 E001            B                EnviaCursor
  229 000000F4         Linha1
  230 000000F4         ; Carrega comando para linha 1
  231 000000F4 F04F 00C0       LDR              R0, =LINHA_1
  232 000000F8         EnviaCursor
  233 000000F8         ; Adiciona valor da coluna
  234 000000F8 4408            ADD              R0, R1
  235 000000FA F000 F803       BL               ComandoLCD
  236 000000FE E8BD 4003       POP              {R0,R1,LR}
  237 00000102         ; Retorna
  238 00000102 4770            BX               LR
  239 00000104         
  240 00000104         ; Funções auxiliares ao LCD
  241 00000104         
  242 00000104         ; ComandoLCD
  243 00000104         ; Entrada: R0 - Comando a ser enviado ao LCD 
  244 00000104         ; Saída: Nenhuma
  245 00000104         ComandoLCD
  246 00000104         ; Empilha registradores
  247 00000104 B50E            PUSH             {R1,R2,R3,LR}
  248 00000106         ; Carrega endereços 
  249 00000106 4924            LDR              R1, =LCD_CONTROL
  250 00000108 4A24            LDR              R2, =LCD_BUS
  251 0000010A         ; EN, RW e RS zerados
  252 0000010A F04F 0300       MOV              R3, #2_000
  253 0000010E 600B            STR              R3, [R1]
  254 00000110         ; Insere comando no barramento
  255 00000110 6010            STR              R0, [R2]
  256 00000112         ; Ativa enable
  257 00000112 F04F 0304       MOV              R3, #2_100
  258 00000116 600B            STR              R3, [R1]
  259 00000118         ; Espera 2ms
  260 00000118 B401            PUSH             {R0}
  261 0000011A F04F 0002       MOV              R0, #2
  262 0000011E F7FF FFFE       BL               SysTick_Wait1ms
  263 00000122 BC01            POP              {R0}
  264 00000124         ; Desempilha registradores
  265 00000124 E8BD 400E       POP{R1,R2,R3,LR}
  266 00000128         ; Retorna
  267 00000128 4770            BX               LR



ARM Macro Assembler    Page 9 


  268 0000012A         
  269 0000012A         ; DadoLCD
  270 0000012A         ; Entrada: R0 - Dado a ser enviado ao LCD 
  271 0000012A         ; Saída: Nenhuma
  272 0000012A         DadoLCD
  273 0000012A         ; Empilha registradores
  274 0000012A B50E            PUSH             {R1,R2,R3,LR}
  275 0000012C         ; Carrega endereços 
  276 0000012C 491A            LDR              R1, =LCD_CONTROL
  277 0000012E 4A1B            LDR              R2, =LCD_BUS
  278 00000130         ; Enable zerado
  279 00000130 F04F 0301       MOV              R3, #2_001
  280 00000134 600B            STR              R3, [R1]
  281 00000136         ; Insere dado no barramento
  282 00000136 6010            STR              R0, [R2]
  283 00000138         ; Enable ativado
  284 00000138 F04F 0305       MOV              R3, #2_101
  285 0000013C 600B            STR              R3, [R1]
  286 0000013E         ; Espera 2ms
  287 0000013E B401            PUSH             {R0}
  288 00000140 F04F 0002       MOV              R0, #2
  289 00000144 F7FF FFFE       BL               SysTick_Wait1ms
  290 00000148 BC01            POP              {R0}
  291 0000014A         ; Desempilha registradores
  292 0000014A E8BD 400E       POP{R1,R2,R3,LR}
  293 0000014E         ; Retorna
  294 0000014E 4770            BX               LR
  295 00000150         
  296 00000150         
  297 00000150                 ALIGN
  298 00000150                 END
              400FE608 
              400FEA08 
              40060528 
              40063528 
              40061528 
              4006052C 
              4006352C 
              4006152C 
              40060400 
              40063400 
              40061400 
              40060420 
              40063420 
              40061420 
              4006051C 
              4006351C 
              4006151C 
              40060510 
              400633FC 
              400613FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\gpio.d -o.\objects\gpio.o -I.\RTE\_Target_1 -IC:\User
s\Shigueo\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -I
C:\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION
_VERSION SETA 528" --predefine="TM4C1294NCPDT SETA 1" --list=.\listings\gpio.ls
t gpio.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 76 in file gpio.s
   Uses
      None
Comment: .text unused
ComandoLCD 00000104

Symbol: ComandoLCD
   Definitions
      At line 245 in file gpio.s
   Uses
      At line 182 in file gpio.s
      At line 185 in file gpio.s
      At line 188 in file gpio.s
      At line 191 in file gpio.s
      At line 235 in file gpio.s

DadoLCD 0000012A

Symbol: DadoLCD
   Definitions
      At line 272 in file gpio.s
   Uses
      At line 209 in file gpio.s
Comment: DadoLCD used once
EnviaCursor 000000F8

Symbol: EnviaCursor
   Definitions
      At line 232 in file gpio.s
   Uses
      At line 228 in file gpio.s
Comment: EnviaCursor used once
EsperaGPIO 00000012

Symbol: EsperaGPIO
   Definitions
      At line 100 in file gpio.s
   Uses
      At line 106 in file gpio.s
Comment: EsperaGPIO used once
Fim 000000E4

Symbol: Fim
   Definitions
      At line 212 in file gpio.s
   Uses
      At line 205 in file gpio.s
Comment: Fim used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 89 in file gpio.s
   Uses
      At line 78 in file gpio.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: GPIO_Init used once
LCD_ImprimeString 000000CC

Symbol: LCD_ImprimeString
   Definitions
      At line 199 in file gpio.s
   Uses
      At line 80 in file gpio.s
      At line 211 in file gpio.s

LCD_Init 000000A4

Symbol: LCD_Init
   Definitions
      At line 178 in file gpio.s
   Uses
      At line 79 in file gpio.s
Comment: LCD_Init used once
LCD_SetaCursor 000000E8

Symbol: LCD_SetaCursor
   Definitions
      At line 221 in file gpio.s
   Uses
      At line 81 in file gpio.s
Comment: LCD_SetaCursor used once
Linha1 000000F4

Symbol: Linha1
   Definitions
      At line 229 in file gpio.s
   Uses
      At line 225 in file gpio.s
Comment: Linha1 used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BIT0 00000001

Symbol: BIT0
   Definitions
      At line 12 in file gpio.s
   Uses
      At line 169 in file gpio.s
Comment: BIT0 used once
BIT1 00000002

Symbol: BIT1
   Definitions
      At line 13 in file gpio.s
   Uses
      At line 170 in file gpio.s
Comment: BIT1 used once
CLEAR 00000001

Symbol: CLEAR
   Definitions
      At line 64 in file gpio.s
   Uses
      At line 190 in file gpio.s
Comment: CLEAR used once
DISPLAY_MODE 0000000C

Symbol: DISPLAY_MODE
   Definitions
      At line 70 in file gpio.s
   Uses
      At line 187 in file gpio.s
Comment: DISPLAY_MODE used once
DISPLAY_OFF 00000003

Symbol: DISPLAY_OFF
   Definitions
      At line 71 in file gpio.s
   Uses
      None
Comment: DISPLAY_OFF unused
ENTRY_MODE 00000006

Symbol: ENTRY_MODE
   Definitions
      At line 61 in file gpio.s
   Uses
      At line 184 in file gpio.s
Comment: ENTRY_MODE used once
FUNCTION_SET 00000038

Symbol: FUNCTION_SET
   Definitions
      At line 60 in file gpio.s
   Uses
      At line 181 in file gpio.s
Comment: FUNCTION_SET used once
GPIO_PORTJ 00000100

Symbol: GPIO_PORTJ



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 31 in file gpio.s
   Uses
      At line 95 in file gpio.s
      At line 102 in file gpio.s

GPIO_PORTJ_AHB_AFSEL_R 40060420

Symbol: GPIO_PORTJ_AHB_AFSEL_R
   Definitions
      At line 27 in file gpio.s
   Uses
      At line 141 in file gpio.s
Comment: GPIO_PORTJ_AHB_AFSEL_R used once
GPIO_PORTJ_AHB_AMSEL_R 40060528

Symbol: GPIO_PORTJ_AHB_AMSEL_R
   Definitions
      At line 24 in file gpio.s
   Uses
      At line 110 in file gpio.s
Comment: GPIO_PORTJ_AHB_AMSEL_R used once
GPIO_PORTJ_AHB_CR_R 40060524

Symbol: GPIO_PORTJ_AHB_CR_R
   Definitions
      At line 23 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_CR_R unused
GPIO_PORTJ_AHB_DATA_R 400603FC

Symbol: GPIO_PORTJ_AHB_DATA_R
   Definitions
      At line 30 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_DATA_R unused
GPIO_PORTJ_AHB_DEN_R 4006051C

Symbol: GPIO_PORTJ_AHB_DEN_R
   Definitions
      At line 28 in file gpio.s
   Uses
      At line 149 in file gpio.s
Comment: GPIO_PORTJ_AHB_DEN_R used once
GPIO_PORTJ_AHB_DIR_R 40060400

Symbol: GPIO_PORTJ_AHB_DIR_R
   Definitions
      At line 26 in file gpio.s
   Uses
      At line 126 in file gpio.s
Comment: GPIO_PORTJ_AHB_DIR_R used once
GPIO_PORTJ_AHB_LOCK_R 40060520

Symbol: GPIO_PORTJ_AHB_LOCK_R
   Definitions
      At line 22 in file gpio.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: GPIO_PORTJ_AHB_LOCK_R unused
GPIO_PORTJ_AHB_PCTL_R 4006052C

Symbol: GPIO_PORTJ_AHB_PCTL_R
   Definitions
      At line 25 in file gpio.s
   Uses
      At line 119 in file gpio.s
Comment: GPIO_PORTJ_AHB_PCTL_R used once
GPIO_PORTJ_AHB_PUR_R 40060510

Symbol: GPIO_PORTJ_AHB_PUR_R
   Definitions
      At line 29 in file gpio.s
   Uses
      At line 168 in file gpio.s
Comment: GPIO_PORTJ_AHB_PUR_R used once
GPIO_PORTK 00000200

Symbol: GPIO_PORTK
   Definitions
      At line 55 in file gpio.s
   Uses
      At line 97 in file gpio.s
      At line 104 in file gpio.s

GPIO_PORTK_AFSEL_R 40061420

Symbol: GPIO_PORTK_AFSEL_R
   Definitions
      At line 48 in file gpio.s
   Uses
      At line 145 in file gpio.s
Comment: GPIO_PORTK_AFSEL_R used once
GPIO_PORTK_AMSEL_R 40061528

Symbol: GPIO_PORTK_AMSEL_R
   Definitions
      At line 53 in file gpio.s
   Uses
      At line 114 in file gpio.s
Comment: GPIO_PORTK_AMSEL_R used once
GPIO_PORTK_CR_R 40061524

Symbol: GPIO_PORTK_CR_R
   Definitions
      At line 52 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_CR_R unused
GPIO_PORTK_DATA_R 400613FC

Symbol: GPIO_PORTK_DATA_R
   Definitions
      At line 46 in file gpio.s
   Uses
      At line 58 in file gpio.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Comment: GPIO_PORTK_DATA_R used once
GPIO_PORTK_DEN_R 4006151C

Symbol: GPIO_PORTK_DEN_R
   Definitions
      At line 50 in file gpio.s
   Uses
      At line 161 in file gpio.s
Comment: GPIO_PORTK_DEN_R used once
GPIO_PORTK_DIR_R 40061400

Symbol: GPIO_PORTK_DIR_R
   Definitions
      At line 47 in file gpio.s
   Uses
      At line 134 in file gpio.s
Comment: GPIO_PORTK_DIR_R used once
GPIO_PORTK_LOCK_R 40061520

Symbol: GPIO_PORTK_LOCK_R
   Definitions
      At line 51 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_LOCK_R unused
GPIO_PORTK_PCTL_R 4006152C

Symbol: GPIO_PORTK_PCTL_R
   Definitions
      At line 54 in file gpio.s
   Uses
      At line 123 in file gpio.s
Comment: GPIO_PORTK_PCTL_R used once
GPIO_PORTK_PUR_R 40061510

Symbol: GPIO_PORTK_PUR_R
   Definitions
      At line 49 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_PUR_R unused
GPIO_PORTM 00000800

Symbol: GPIO_PORTM
   Definitions
      At line 43 in file gpio.s
   Uses
      At line 96 in file gpio.s
      At line 103 in file gpio.s

GPIO_PORTM_AFSEL_R 40063420

Symbol: GPIO_PORTM_AFSEL_R
   Definitions
      At line 36 in file gpio.s
   Uses
      At line 143 in file gpio.s
Comment: GPIO_PORTM_AFSEL_R used once
GPIO_PORTM_AMSEL_R 40063528



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTM_AMSEL_R
   Definitions
      At line 41 in file gpio.s
   Uses
      At line 112 in file gpio.s
Comment: GPIO_PORTM_AMSEL_R used once
GPIO_PORTM_CR_R 40063524

Symbol: GPIO_PORTM_CR_R
   Definitions
      At line 40 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_CR_R unused
GPIO_PORTM_DATA_R 400633FC

Symbol: GPIO_PORTM_DATA_R
   Definitions
      At line 34 in file gpio.s
   Uses
      At line 59 in file gpio.s
Comment: GPIO_PORTM_DATA_R used once
GPIO_PORTM_DEN_R 4006351C

Symbol: GPIO_PORTM_DEN_R
   Definitions
      At line 38 in file gpio.s
   Uses
      At line 155 in file gpio.s
Comment: GPIO_PORTM_DEN_R used once
GPIO_PORTM_DIR_R 40063400

Symbol: GPIO_PORTM_DIR_R
   Definitions
      At line 35 in file gpio.s
   Uses
      At line 130 in file gpio.s
Comment: GPIO_PORTM_DIR_R used once
GPIO_PORTM_LOCK_R 40063520

Symbol: GPIO_PORTM_LOCK_R
   Definitions
      At line 39 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_LOCK_R unused
GPIO_PORTM_PCTL_R 4006352C

Symbol: GPIO_PORTM_PCTL_R
   Definitions
      At line 42 in file gpio.s
   Uses
      At line 121 in file gpio.s
Comment: GPIO_PORTM_PCTL_R used once
GPIO_PORTM_PUR_R 40063510

Symbol: GPIO_PORTM_PUR_R
   Definitions



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

      At line 37 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_PUR_R unused
LCD_BUS 400613FC

Symbol: LCD_BUS
   Definitions
      At line 58 in file gpio.s
   Uses
      At line 250 in file gpio.s
      At line 277 in file gpio.s

LCD_CONTROL 400633FC

Symbol: LCD_CONTROL
   Definitions
      At line 59 in file gpio.s
   Uses
      At line 249 in file gpio.s
      At line 276 in file gpio.s

LINHA_0 00000080

Symbol: LINHA_0
   Definitions
      At line 62 in file gpio.s
   Uses
      At line 227 in file gpio.s
Comment: LINHA_0 used once
LINHA_1 000000C0

Symbol: LINHA_1
   Definitions
      At line 63 in file gpio.s
   Uses
      At line 231 in file gpio.s
Comment: LINHA_1 used once
RET_HOME 00000002

Symbol: RET_HOME
   Definitions
      At line 65 in file gpio.s
   Uses
      None
Comment: RET_HOME unused
SCURSOR_LEFT 00000010

Symbol: SCURSOR_LEFT
   Definitions
      At line 66 in file gpio.s
   Uses
      None
Comment: SCURSOR_LEFT unused
SCURSOR_RIGHT 00000014

Symbol: SCURSOR_RIGHT
   Definitions
      At line 67 in file gpio.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: SCURSOR_RIGHT unused
SDISPLAY_LEFT 00000018

Symbol: SDISPLAY_LEFT
   Definitions
      At line 68 in file gpio.s
   Uses
      None
Comment: SDISPLAY_LEFT unused
SDISPLAY_RIGHT 0000001C

Symbol: SDISPLAY_RIGHT
   Definitions
      At line 69 in file gpio.s
   Uses
      None
Comment: SDISPLAY_RIGHT unused
SYSCTL_PRGPIO_R 400FEA08

Symbol: SYSCTL_PRGPIO_R
   Definitions
      At line 17 in file gpio.s
   Uses
      At line 99 in file gpio.s
Comment: SYSCTL_PRGPIO_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 16 in file gpio.s
   Uses
      At line 94 in file gpio.s
Comment: SYSCTL_RCGCGPIO_R used once
48 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 83 in file gpio.s
   Uses
      At line 262 in file gpio.s
      At line 289 in file gpio.s

1 symbol
396 symbols in table
