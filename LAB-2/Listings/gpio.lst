


ARM Macro Assembler    Page 1 


    1 00000000         ; gpio.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 19/03/2018
    5 00000000         
    6 00000000         ; ------------------------------------------------------
                       -------------------------
    7 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000         ; Declarações EQU - Defines
   10 00000000         ; ========================
   11 00000000         ; Definições de Valores
   12 00000000 00000001 
                       BIT0    EQU              2_0001
   13 00000000 00000002 
                       BIT1    EQU              2_0010
   14 00000000         ; ========================
   15 00000000         ; Definições dos Registradores Gerais
   16 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   17 00000000 400FEA08 
                       SYSCTL_PRGPIO_R
                               EQU              0x400FEA08
   18 00000000         ; ========================
   19 00000000         ; Definições dos Ports
   20 00000000         
   21 00000000         ; PORT J
   22 00000000 40060520 
                       GPIO_PORTJ_AHB_LOCK_R
                               EQU              0x40060520
   23 00000000 40060524 
                       GPIO_PORTJ_AHB_CR_R
                               EQU              0x40060524
   24 00000000 40060528 
                       GPIO_PORTJ_AHB_AMSEL_R
                               EQU              0x40060528
   25 00000000 4006052C 
                       GPIO_PORTJ_AHB_PCTL_R
                               EQU              0x4006052C
   26 00000000 40060400 
                       GPIO_PORTJ_AHB_DIR_R
                               EQU              0x40060400
   27 00000000 40060420 
                       GPIO_PORTJ_AHB_AFSEL_R
                               EQU              0x40060420
   28 00000000 4006051C 
                       GPIO_PORTJ_AHB_DEN_R
                               EQU              0x4006051C
   29 00000000 40060510 
                       GPIO_PORTJ_AHB_PUR_R
                               EQU              0x40060510
   30 00000000 400603FC 
                       GPIO_PORTJ_AHB_DATA_R
                               EQU              0x400603FC
   31 00000000 00000100 
                       GPIO_PORTJ



ARM Macro Assembler    Page 2 


                               EQU              2_000000100000000
   32 00000000         
   33 00000000         ;PORT M
   34 00000000 400633FC 
                       GPIO_PORTM_DATA_R
                               EQU              0x400633FC
   35 00000000 40063400 
                       GPIO_PORTM_DIR_R
                               EQU              0x40063400
   36 00000000 40063420 
                       GPIO_PORTM_AFSEL_R
                               EQU              0x40063420
   37 00000000 40063510 
                       GPIO_PORTM_PUR_R
                               EQU              0x40063510
   38 00000000 4006351C 
                       GPIO_PORTM_DEN_R
                               EQU              0x4006351C
   39 00000000 40063520 
                       GPIO_PORTM_LOCK_R
                               EQU              0x40063520
   40 00000000 40063524 
                       GPIO_PORTM_CR_R
                               EQU              0x40063524
   41 00000000 40063528 
                       GPIO_PORTM_AMSEL_R
                               EQU              0x40063528
   42 00000000 4006352C 
                       GPIO_PORTM_PCTL_R
                               EQU              0x4006352C
   43 00000000 00000800 
                       GPIO_PORTM
                               EQU              2_000100000000000
   44 00000000         
   45 00000000         ;PORT K
   46 00000000 400613FC 
                       GPIO_PORTK_DATA_R
                               EQU              0x400613FC
   47 00000000 40061400 
                       GPIO_PORTK_DIR_R
                               EQU              0x40061400
   48 00000000 40061420 
                       GPIO_PORTK_AFSEL_R
                               EQU              0x40061420
   49 00000000 40061510 
                       GPIO_PORTK_PUR_R
                               EQU              0x40061510
   50 00000000 4006151C 
                       GPIO_PORTK_DEN_R
                               EQU              0x4006151C
   51 00000000 40061520 
                       GPIO_PORTK_LOCK_R
                               EQU              0x40061520
   52 00000000 40061524 
                       GPIO_PORTK_CR_R
                               EQU              0x40061524
   53 00000000 40061528 
                       GPIO_PORTK_AMSEL_R
                               EQU              0x40061528



ARM Macro Assembler    Page 3 


   54 00000000 4006152C 
                       GPIO_PORTK_PCTL_R
                               EQU              0x4006152C
   55 00000000 00000200 
                       GPIO_PORTK
                               EQU              2_000001000000000
   56 00000000         
   57 00000000         ; ------------------------------------------------------
                       -------------------------
   58 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   59 00000000         ;                  código
   60 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   61 00000000         
   62 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   63 00000000                 EXPORT           GPIO_Init
   64 00000000                 IMPORT           SysTick_Wait1ms
   65 00000000         
   66 00000000         ;-------------------------------------------------------
                       -------------------------
   67 00000000         ; Função GPIO_Init
   68 00000000         ; Parâmetro de entrada: Não tem
   69 00000000         ; Parâmetro de saída: Não tem
   70 00000000         GPIO_Init
   71 00000000         ;=====================
   72 00000000         ; 1. Ativar o clock para a porta setando o bit correspon
                       dente no registrador RCGCGPIO,
   73 00000000         ; após isso verificar no PRGPIO se a porta está pronta p
                       ara uso.
   74 00000000         ; enable clock to GPIOF at clock gating register
   75 00000000 4854            LDR              R0, =SYSCTL_RCGCGPIO_R ;Carrega
                                                             o endereço do regi
                                                            strador RCGCGPIO
   76 00000002 F44F 7180       MOV              R1, #GPIO_PORTJ ;Seta o bit da 
                                                            porta A
   77 00000006 F441 6100       ORR              R1, #GPIO_PORTM
   78 0000000A F441 7100       ORR              R1, #GPIO_PORTK
   79 0000000E 6001            STR              R1, [R0]    ;Move para a memóri
                                                            a os bits das porta
                                                            s no endereço do RC
                                                            GCGPIO
   80 00000010         
   81 00000010 4851            LDR              R0, =SYSCTL_PRGPIO_R ;Carrega o
                                                             endereço do PRGPIO
                                                             para esperar os GP
                                                            IO ficarem prontos
   82 00000012 6801    EsperaGPIO
                               LDR              R1, [R0]    ;Lê da memória o co
                                                            nteúdo do endereço 
                                                            do registrador
   83 00000014 F44F 7280       MOV              R2, #GPIO_PORTJ ;Seta os bits c
                                                            orrespondentes às p
                                                            ortas para fazer a 
                                                            comparação
   84 00000018 F442 6200       ORR              R2, #GPIO_PORTM
   85 0000001C F442 7200       ORR              R2, #GPIO_PORTK
   86 00000020 4211            TST              R1, R2      ;ANDS de R1 com R2



ARM Macro Assembler    Page 4 


   87 00000022 D0F6            BEQ              EsperaGPIO  ;Se o flag Z=1, vol
                                                            ta para o laço. Sen
                                                            ão continua executa
                                                            ndo
   88 00000024         
   89 00000024         ; 2. Limpar o AMSEL para desabilitar a analógica
   90 00000024 F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador para desabil
                                                            itar a função analó
                                                            gica
   91 00000028         
   92 00000028 484C            LDR              R0, =GPIO_PORTJ_AHB_AMSEL_R ;Ca
                                                            rrega o R0 com o en
                                                            dere?o do AMSEL par
                                                            a a porta J
   93 0000002A 6001            STR              R1, [R0]
   94 0000002C         
   95 0000002C 484C            LDR              R0, =GPIO_PORTM_AMSEL_R ;Carreg
                                                            a o R0 com o endere
                                                            ço do AMSEL para a 
                                                            porta P
   96 0000002E 6001            STR              R1, [R0]
   97 00000030         
   98 00000030 484C            LDR              R0, =GPIO_PORTK_AMSEL_R ;Carreg
                                                            a o R0 com o endere
                                                            ço do AMSEL para a 
                                                            porta P
   99 00000032 6001            STR              R1, [R0]
  100 00000034         
  101 00000034         ; 3. Limpar PCTL para selecionar o GPIO
  102 00000034 F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador para selecio
                                                            nar o modo GPIO
  103 00000038 484B            LDR              R0, =GPIO_PORTJ_AHB_PCTL_R ;Car
                                                            rega o R0 com o end
                                                            ere?o do PCTL para 
                                                            a porta J
  104 0000003A 6001            STR              R1, [R0]
  105 0000003C 484B            LDR              R0, =GPIO_PORTM_PCTL_R ;Carrega
                                                             o R0 com o endere?
                                                            o do PCTL para a po
                                                            rta J
  106 0000003E 6001            STR              R1, [R0]
  107 00000040 484B            LDR              R0, =GPIO_PORTK_PCTL_R ;Carrega
                                                             o R0 com o endere?
                                                            o do PCTL para a po
                                                            rta J
  108 00000042 6001            STR              R1, [R0]
  109 00000044         ; 4. DIR para 0 se for entrada, 1 se for saída
  110 00000044 484B            LDR              R0, =GPIO_PORTJ_AHB_DIR_R ;Carr
                                                            ega o R0 com o ende
                                                            re?o do DIR para a 
                                                            porta J
  111 00000046 F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador DIR para fun
                                                            cionar com entrada
  112 0000004A 6001            STR              R1, [R0]
  113 0000004C         
  114 0000004C 484A            LDR              R0, =GPIO_PORTM_DIR_R ;Carrega 



ARM Macro Assembler    Page 5 


                                                            o R0 com o endere?o
                                                             do DIR para a port
                                                            a J
  115 0000004E F04F 01FF       MOV              R1, #0xFF   ;Colocar 0 no regis
                                                            trador DIR para fun
                                                            cionar com entrada
  116 00000052 6001            STR              R1, [R0]
  117 00000054         
  118 00000054 4849            LDR              R0, =GPIO_PORTK_DIR_R ;Carrega 
                                                            o R0 com o endere?o
                                                             do DIR para a port
                                                            a J
  119 00000056 F04F 01FF       MOV              R1, #0xFF   ;Colocar 0 no regis
                                                            trador DIR para fun
                                                            cionar com entrada
  120 0000005A 6001            STR              R1, [R0]
  121 0000005C         
  122 0000005C         ; 5. Limpar os bits AFSEL para 0 para selecionar GPIO 
  123 0000005C         ;    Sem função alternativa
  124 0000005C F04F 0100       MOV              R1, #0
  125 00000060 4847            LDR              R0, =GPIO_PORTJ_AHB_AFSEL_R ;Ca
                                                            rrega o endere?o do
                                                             AFSEL da porta J
  126 00000062 6001            STR              R1, [R0]
  127 00000064 4847            LDR              R0, =GPIO_PORTM_AFSEL_R ;Carreg
                                                            a o endere?o do AFS
                                                            EL da porta J
  128 00000066 6001            STR              R1, [R0]
  129 00000068 4847            LDR              R0, =GPIO_PORTK_AFSEL_R ;Carreg
                                                            a o endere?o do AFS
                                                            EL da porta J
  130 0000006A 6001            STR              R1, [R0]
  131 0000006C         
  132 0000006C         ; 6. Setar os bits de DEN para habilitar I/O digital
  133 0000006C 4847            LDR              R0, =GPIO_PORTJ_AHB_DEN_R ;Carr
                                                            ega o endere?o do D
                                                            EN
  134 0000006E 6801            LDR              R1, [R0]    ;Ler da mem?ria o r
                                                            egistrador GPIO_POR
                                                            TJ_AHB_DEN_R
  135 00000070 F04F 0203       MOV              R2, #2_00000011 ;Habilitar func
                                                            ionalidade digital 
                                                            na DEN
  136 00000074 EA41 0102       ORR              R1, R2      ;Setar bits sem sob
                                                            rescrever os demais
                                                            
  137 00000078 6001            STR              R1, [R0]
  138 0000007A         
  139 0000007A 4845            LDR              R0, =GPIO_PORTM_DEN_R ;Carrega 
                                                            o endere?o do DEN
  140 0000007C 6801            LDR              R1, [R0]    ;Ler da mem?ria o r
                                                            egistrador GPIO_POR
                                                            TJ_AHB_DEN_R
  141 0000007E F04F 0207       MOV              R2, #2_00000111 ;Habilitar func
                                                            ionalidade digital 
                                                            na DEN
  142 00000082 EA41 0102       ORR              R1, R2      ;Setar bits sem sob
                                                            rescrever os demais
                                                            



ARM Macro Assembler    Page 6 


  143 00000086 6001            STR              R1, [R0]
  144 00000088         
  145 00000088 4842            LDR              R0, =GPIO_PORTK_DEN_R ;Carrega 
                                                            o endere?o do DEN
  146 0000008A 6801            LDR              R1, [R0]    ;Ler da mem?ria o r
                                                            egistrador GPIO_POR
                                                            TJ_AHB_DEN_R
  147 0000008C F04F 02FF       MOV              R2, #2_11111111 ;Habilitar func
                                                            ionalidade digital 
                                                            na DEN
  148 00000090 EA41 0102       ORR              R1, R2      ;Setar bits sem sob
                                                            rescrever os demais
                                                            
  149 00000094 6001            STR              R1, [R0]
  150 00000096         
  151 00000096         ; 7. Para habilitar resistor de pull-up interno, setar P
                       UR para 1
  152 00000096 4840            LDR              R0, =GPIO_PORTJ_AHB_PUR_R ;Carr
                                                            ega o endere?o do P
                                                            UR para a porta J
  153 00000098 F04F 0101       MOV              R1, #BIT0   ;Habilitar funciona
                                                            lidade digital de r
                                                            esistor de pull-up 
                                                            
  154 0000009C F041 0102       ORR              R1, #BIT1   ;nos bits 0 e 1
  155 000000A0 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da mem?ria do 
                                                            resistor de pull-up
                                                            
  156 000000A2         
  157 000000A2         
  158 000000A2         ; 8. Inicializa o LCD para entrada de dados
  159 000000A2         ; INICIALIZA OS BITS DE ESCRITA EM DUAS LINHAS
  160 000000A2 493E            LDR              R1, =GPIO_PORTK_DATA_R
  161 000000A4 F04F 0038       MOV              R0, #0x38   ; D0:D7 <- 0x38, qu
                                                            e indica que serao 
                                                            usadas duas linhas
  162 000000A8 6008            STR              R0, [R1]
  163 000000AA         ; ATIVA O ENABLE
  164 000000AA 493D            LDR              R1, =GPIO_PORTM_DATA_R
  165 000000AC F04F 0004       MOV              R0, #0x04   ; ENABLE <- 1, RW <
                                                            - 0, RS <- 0
  166 000000B0 6008            STR              R0, [R1]
  167 000000B2         ; AGUARDA 2 mS
  168 000000B2 F04F 0002       MOV              R0, #2
  169 000000B6 F7FF FFFE       BL               SysTick_Wait1ms
  170 000000BA         ; DESATIVA O ENABLE
  171 000000BA 4939            LDR              R1, =GPIO_PORTM_DATA_R
  172 000000BC F04F 0000       MOV              R0, #0x00   ; ENABLE <- 1, RW <
                                                            - 0, RS <- 0
  173 000000C0 6008            STR              R0, [R1]
  174 000000C2         ; INICIALIZA OS BITS DE ESCRITA COM AUTOINCREMENTO PARA 
                       A DIREITA
  175 000000C2 4936            LDR              R1, =GPIO_PORTK_DATA_R
  176 000000C4 F04F 0006       MOV              R0, #0x06   ; D0:D7 <- 0x06, qu
                                                            e indica que sera a
                                                            utoincrementado par
                                                            a a direita
  177 000000C8 6008            STR              R0, [R1]



ARM Macro Assembler    Page 7 


  178 000000CA         ; ATIVA O ENABLE
  179 000000CA 4935            LDR              R1, =GPIO_PORTM_DATA_R
  180 000000CC F04F 0004       MOV              R0, #0x04   ; ENABLE <- 1, RW <
                                                            - 0, RS <- 0
  181 000000D0 6008            STR              R0, [R1]
  182 000000D2         ; AGUARDA 2 mS
  183 000000D2 F04F 0002       MOV              R0, #2
  184 000000D6 F7FF FFFE       BL               SysTick_Wait1ms
  185 000000DA         ; DESATIVA O ENABLE
  186 000000DA 4931            LDR              R1, =GPIO_PORTM_DATA_R
  187 000000DC F04F 0000       MOV              R0, #0x00   ; ENABLE <- 1, RW <
                                                            - 0, RS <- 0
  188 000000E0 6008            STR              R0, [R1]
  189 000000E2         ; INICIALIZA OS BITS DE ESCRITA COM O CURSOR PISCANDO NA
                        PRIMEIRA POSICAO
  190 000000E2 492E            LDR              R1, =GPIO_PORTK_DATA_R
  191 000000E4 F04F 000F       MOV              R0, #0x0F   ; D0:D7 <- Piscando
                                                            
  192 000000E8 6008            STR              R0, [R1]
  193 000000EA         ; ATIVA O ENABLE
  194 000000EA 492D            LDR              R1, =GPIO_PORTM_DATA_R
  195 000000EC F04F 0004       MOV              R0, #0x04   ; ENABLE <- 1, RW <
                                                            - 0, RS <- 0
  196 000000F0 6008            STR              R0, [R1]
  197 000000F2         ; AGUARDA 2 mS
  198 000000F2 F04F 0002       MOV              R0, #2
  199 000000F6 F7FF FFFE       BL               SysTick_Wait1ms
  200 000000FA         ; DESATIVA O ENABLE
  201 000000FA 4929            LDR              R1, =GPIO_PORTM_DATA_R
  202 000000FC F04F 0000       MOV              R0, #0x00   ; ENABLE <- 1, RW <
                                                            - 0, RS <- 0
  203 00000100 6008            STR              R0, [R1]
  204 00000102         ; INICIALIZA OS BITS DE ESCRITA LIMPOS
  205 00000102 4926            LDR              R1, =GPIO_PORTK_DATA_R
  206 00000104 F04F 0001       MOV              R0, #0x01   ; D0:D7 <- clear
  207 00000108 6008            STR              R0, [R1]
  208 0000010A         ; ATIVA O ENABLE
  209 0000010A 4925            LDR              R1, =GPIO_PORTM_DATA_R
  210 0000010C F04F 0004       MOV              R0, #0x04   ; ENABLE <- 1, RW <
                                                            - 0, RS <- 0
  211 00000110 6008            STR              R0, [R1]
  212 00000112         ; AGUARDA 2 mS
  213 00000112 F04F 0002       MOV              R0, #2
  214 00000116 F7FF FFFE       BL               SysTick_Wait1ms
  215 0000011A         ; DESATIVA O ENABLE
  216 0000011A 4921            LDR              R1, =GPIO_PORTM_DATA_R
  217 0000011C F04F 0000       MOV              R0, #0x00   ; ENABLE <- 1, RW <
                                                            - 0, RS <- 0
  218 00000120 6008            STR              R0, [R1]
  219 00000122         
  220 00000122         EscreveCaractere
  221 00000122 F04F 02F7       MOV              R2, #2_11110111
  222 00000126         
  223 00000126 491E            LDR              R1, =GPIO_PORTM_DATA_R
  224 00000128 F04F 0001       MOV              R0, #2_001
  225 0000012C 6008            STR              R0, [R1]
  226 0000012E         
  227 0000012E 491B            LDR              R1, =GPIO_PORTK_DATA_R
  228 00000130 4610            MOV              R0, R2      ; r2 é o caractere



ARM Macro Assembler    Page 8 


  229 00000132 6008            STR              R0, [R1]
  230 00000134         
  231 00000134 491A            LDR              R1, =GPIO_PORTM_DATA_R
  232 00000136 F04F 0005       MOV              R0, #2_101
  233 0000013A 6008            STR              R0, [R1]
  234 0000013C         
  235 0000013C F04F 0002       MOV              R0, #2
  236 00000140 F7FF FFFE       BL               SysTick_Wait1ms
  237 00000144         
  238 00000144 4916            LDR              R1, =GPIO_PORTM_DATA_R
  239 00000146 F04F 0000       MOV              R0, #2_000
  240 0000014A 6008            STR              R0, [R1]
  241 0000014C         
  242 0000014C 4770            BX               LR
  243 0000014E         
  244 0000014E         
  245 0000014E         ; ------------------------------------------------------
                       -------------------------
  246 0000014E         ; Função LeBotoes
  247 0000014E         ; Parâmetro de entrada: Não tem
  248 0000014E         ; Parâmetro de saída: R0 --> o valor da leitura
  249 0000014E         LeBotoes
  250 0000014E 4915            LDR              R1, =GPIO_PORTJ_AHB_DATA_R
  251 00000150 6808            LDR              R0, [R1]    ;Lê no barramento d
                                                            e dados dos pinos [
                                                            J1-J0]
  252 00000152 4770            BX               LR          ;Retorno
  253 00000154         
  254 00000154                 ALIGN                        ; garante que o fim
                                                             da seção está alin
                                                            hada 
  255 00000154                 END                          ; fim do arquivo
              400FE608 
              400FEA08 
              40060528 
              40063528 
              40061528 
              4006052C 
              4006352C 
              4006152C 
              40060400 
              40063400 
              40061400 
              40060420 
              40063420 
              40061420 
              4006051C 
              4006351C 
              4006151C 
              40060510 
              400613FC 
              400633FC 
              400603FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\gpio.d -o.\objects\gpio.o -I.\RTE\_Target_1 -IC:\User
s\joaoz\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -IC:
\Keil_v5\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_V
ERSION SETA 528" --predefine="TM4C1294NCPDT SETA 1" --list=.\listings\gpio.lst 
gpio.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 60 in file gpio.s
   Uses
      None
Comment: .text unused
EscreveCaractere 00000122

Symbol: EscreveCaractere
   Definitions
      At line 220 in file gpio.s
   Uses
      None
Comment: EscreveCaractere unused
EsperaGPIO 00000012

Symbol: EsperaGPIO
   Definitions
      At line 82 in file gpio.s
   Uses
      At line 87 in file gpio.s
Comment: EsperaGPIO used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 70 in file gpio.s
   Uses
      At line 63 in file gpio.s
Comment: GPIO_Init used once
LeBotoes 0000014E

Symbol: LeBotoes
   Definitions
      At line 249 in file gpio.s
   Uses
      None
Comment: LeBotoes unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BIT0 00000001

Symbol: BIT0
   Definitions
      At line 12 in file gpio.s
   Uses
      At line 153 in file gpio.s
Comment: BIT0 used once
BIT1 00000002

Symbol: BIT1
   Definitions
      At line 13 in file gpio.s
   Uses
      At line 154 in file gpio.s
Comment: BIT1 used once
GPIO_PORTJ 00000100

Symbol: GPIO_PORTJ
   Definitions
      At line 31 in file gpio.s
   Uses
      At line 76 in file gpio.s
      At line 83 in file gpio.s

GPIO_PORTJ_AHB_AFSEL_R 40060420

Symbol: GPIO_PORTJ_AHB_AFSEL_R
   Definitions
      At line 27 in file gpio.s
   Uses
      At line 125 in file gpio.s
Comment: GPIO_PORTJ_AHB_AFSEL_R used once
GPIO_PORTJ_AHB_AMSEL_R 40060528

Symbol: GPIO_PORTJ_AHB_AMSEL_R
   Definitions
      At line 24 in file gpio.s
   Uses
      At line 92 in file gpio.s
Comment: GPIO_PORTJ_AHB_AMSEL_R used once
GPIO_PORTJ_AHB_CR_R 40060524

Symbol: GPIO_PORTJ_AHB_CR_R
   Definitions
      At line 23 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_CR_R unused
GPIO_PORTJ_AHB_DATA_R 400603FC

Symbol: GPIO_PORTJ_AHB_DATA_R
   Definitions
      At line 30 in file gpio.s
   Uses
      At line 250 in file gpio.s
Comment: GPIO_PORTJ_AHB_DATA_R used once
GPIO_PORTJ_AHB_DEN_R 4006051C




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTJ_AHB_DEN_R
   Definitions
      At line 28 in file gpio.s
   Uses
      At line 133 in file gpio.s
Comment: GPIO_PORTJ_AHB_DEN_R used once
GPIO_PORTJ_AHB_DIR_R 40060400

Symbol: GPIO_PORTJ_AHB_DIR_R
   Definitions
      At line 26 in file gpio.s
   Uses
      At line 110 in file gpio.s
Comment: GPIO_PORTJ_AHB_DIR_R used once
GPIO_PORTJ_AHB_LOCK_R 40060520

Symbol: GPIO_PORTJ_AHB_LOCK_R
   Definitions
      At line 22 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_LOCK_R unused
GPIO_PORTJ_AHB_PCTL_R 4006052C

Symbol: GPIO_PORTJ_AHB_PCTL_R
   Definitions
      At line 25 in file gpio.s
   Uses
      At line 103 in file gpio.s
Comment: GPIO_PORTJ_AHB_PCTL_R used once
GPIO_PORTJ_AHB_PUR_R 40060510

Symbol: GPIO_PORTJ_AHB_PUR_R
   Definitions
      At line 29 in file gpio.s
   Uses
      At line 152 in file gpio.s
Comment: GPIO_PORTJ_AHB_PUR_R used once
GPIO_PORTK 00000200

Symbol: GPIO_PORTK
   Definitions
      At line 55 in file gpio.s
   Uses
      At line 78 in file gpio.s
      At line 85 in file gpio.s

GPIO_PORTK_AFSEL_R 40061420

Symbol: GPIO_PORTK_AFSEL_R
   Definitions
      At line 48 in file gpio.s
   Uses
      At line 129 in file gpio.s
Comment: GPIO_PORTK_AFSEL_R used once
GPIO_PORTK_AMSEL_R 40061528

Symbol: GPIO_PORTK_AMSEL_R
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      At line 53 in file gpio.s
   Uses
      At line 98 in file gpio.s
Comment: GPIO_PORTK_AMSEL_R used once
GPIO_PORTK_CR_R 40061524

Symbol: GPIO_PORTK_CR_R
   Definitions
      At line 52 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_CR_R unused
GPIO_PORTK_DATA_R 400613FC

Symbol: GPIO_PORTK_DATA_R
   Definitions
      At line 46 in file gpio.s
   Uses
      At line 160 in file gpio.s
      At line 175 in file gpio.s
      At line 190 in file gpio.s
      At line 205 in file gpio.s
      At line 227 in file gpio.s

GPIO_PORTK_DEN_R 4006151C

Symbol: GPIO_PORTK_DEN_R
   Definitions
      At line 50 in file gpio.s
   Uses
      At line 145 in file gpio.s
Comment: GPIO_PORTK_DEN_R used once
GPIO_PORTK_DIR_R 40061400

Symbol: GPIO_PORTK_DIR_R
   Definitions
      At line 47 in file gpio.s
   Uses
      At line 118 in file gpio.s
Comment: GPIO_PORTK_DIR_R used once
GPIO_PORTK_LOCK_R 40061520

Symbol: GPIO_PORTK_LOCK_R
   Definitions
      At line 51 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_LOCK_R unused
GPIO_PORTK_PCTL_R 4006152C

Symbol: GPIO_PORTK_PCTL_R
   Definitions
      At line 54 in file gpio.s
   Uses
      At line 107 in file gpio.s
Comment: GPIO_PORTK_PCTL_R used once
GPIO_PORTK_PUR_R 40061510

Symbol: GPIO_PORTK_PUR_R



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 49 in file gpio.s
   Uses
      None
Comment: GPIO_PORTK_PUR_R unused
GPIO_PORTM 00000800

Symbol: GPIO_PORTM
   Definitions
      At line 43 in file gpio.s
   Uses
      At line 77 in file gpio.s
      At line 84 in file gpio.s

GPIO_PORTM_AFSEL_R 40063420

Symbol: GPIO_PORTM_AFSEL_R
   Definitions
      At line 36 in file gpio.s
   Uses
      At line 127 in file gpio.s
Comment: GPIO_PORTM_AFSEL_R used once
GPIO_PORTM_AMSEL_R 40063528

Symbol: GPIO_PORTM_AMSEL_R
   Definitions
      At line 41 in file gpio.s
   Uses
      At line 95 in file gpio.s
Comment: GPIO_PORTM_AMSEL_R used once
GPIO_PORTM_CR_R 40063524

Symbol: GPIO_PORTM_CR_R
   Definitions
      At line 40 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_CR_R unused
GPIO_PORTM_DATA_R 400633FC

Symbol: GPIO_PORTM_DATA_R
   Definitions
      At line 34 in file gpio.s
   Uses
      At line 164 in file gpio.s
      At line 171 in file gpio.s
      At line 179 in file gpio.s
      At line 186 in file gpio.s
      At line 194 in file gpio.s
      At line 201 in file gpio.s
      At line 209 in file gpio.s
      At line 216 in file gpio.s
      At line 223 in file gpio.s
      At line 231 in file gpio.s
      At line 238 in file gpio.s

GPIO_PORTM_DEN_R 4006351C

Symbol: GPIO_PORTM_DEN_R



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 38 in file gpio.s
   Uses
      At line 139 in file gpio.s
Comment: GPIO_PORTM_DEN_R used once
GPIO_PORTM_DIR_R 40063400

Symbol: GPIO_PORTM_DIR_R
   Definitions
      At line 35 in file gpio.s
   Uses
      At line 114 in file gpio.s
Comment: GPIO_PORTM_DIR_R used once
GPIO_PORTM_LOCK_R 40063520

Symbol: GPIO_PORTM_LOCK_R
   Definitions
      At line 39 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_LOCK_R unused
GPIO_PORTM_PCTL_R 4006352C

Symbol: GPIO_PORTM_PCTL_R
   Definitions
      At line 42 in file gpio.s
   Uses
      At line 105 in file gpio.s
Comment: GPIO_PORTM_PCTL_R used once
GPIO_PORTM_PUR_R 40063510

Symbol: GPIO_PORTM_PUR_R
   Definitions
      At line 37 in file gpio.s
   Uses
      None
Comment: GPIO_PORTM_PUR_R unused
SYSCTL_PRGPIO_R 400FEA08

Symbol: SYSCTL_PRGPIO_R
   Definitions
      At line 17 in file gpio.s
   Uses
      At line 81 in file gpio.s
Comment: SYSCTL_PRGPIO_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 16 in file gpio.s
   Uses
      At line 75 in file gpio.s
Comment: SYSCTL_RCGCGPIO_R used once
34 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 64 in file gpio.s
   Uses
      At line 169 in file gpio.s
      At line 184 in file gpio.s
      At line 199 in file gpio.s
      At line 214 in file gpio.s
      At line 236 in file gpio.s

1 symbol
376 symbols in table
